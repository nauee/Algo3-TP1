TestCase subclass: #AlgoVidTests	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoVidTests methodsFor: 'running' stamp: 'Nahuel 5/14/2021 23:58'!setUp	algovid := AlgoVid new.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:13'!test12PreguntaSiUnaPersonaInexistentePuedeCircularLanzaError	self should: [ algovid puedeCircular: 'Pablo' ] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test16UnaPersonaCon3SintomasPeroUnoHabitualTieneDiagnosticoPositivo	algovid nuevaPersona: 'Agustina'.	algovid agregarSintoma: 'Fiebre' a: 'Agustina'.	algovid agregarSintoma: 'Dolor corpolar' a: 'Agustina'. 	algovid agregarSintoma: 'Dolor de garganta' a: 'Agustina'.		self assert: ( algovid diagnosticoDe: 'Agustina' ) equals: 'Positivo'  	! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test15UnaPersonaCon3SintomasNoHabitualesTieneDiagnosticoSospechoso	algovid nuevaPersona: 'Agustina'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Agustina'.	algovid agregarSintoma: 'Dolor corpolar' a: 'Agustina'. 	algovid agregarSintoma: 'Dolor de garganta' a: 'Agustina'.		self assert: ( algovid diagnosticoDe: 'Agustina' ) equals: 'Sospechoso'  	! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test07UnaPersonaDeRiesgoNoPuedeCircularAunqueSeaEsencial	algovid nuevaPersona: 'Pepe'.	algovid esPersonaDeRiesgo: 'Pepe'.	algovid esPersonalEsencial: 'Pepe'.		self deny: ( algovid puedeCircular: 'Pepe' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:53'!test31PreguntarSiUnaBurbujaInexistenteEstaPinchadaLanzaError	self should: [ algovid burbujaPinchada: 'Algoritmos 3' ] raise: BurbujaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:09'!test08AgregarSintomaAUnaPersonaQueNoExisteLanzaError	self should: [ algovid agregarSintoma: 'Tos' a: 'Pablo' ] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test17UnaPersonaCon4SintomasOMasTieneDiagnosticoPositivo	algovid nuevaPersona: 'Agustina'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Agustina'.	algovid agregarSintoma: 'Dolor corpolar' a: 'Agustina'. 	algovid agregarSintoma: 'Dolor de garganta' a: 'Agustina'.	algovid agregarSintoma: 'Diarrea' a: 'Agustina'.		self assert: ( algovid diagnosticoDe: 'Agustina' ) equals: 'Positivo'  	! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:46'!test27UnaBurbujaConAlgunSospechosoNoEstaPinchada	algovid nuevaBurbuja: 'Algoritmos 3'.	algovid nuevaPersona: 'Franco'.	algovid nuevaPersona: 'Fernando'.	algovid nuevaPersona: 'Nahuel'.	algovid nuevaPersona: 'Melina'.	algovid agregarA: 'Franco' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Fernando' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Nahuel' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Melina' aLaBurbuja: 'Algoritmos 3'.	algovid agregarSintoma: 'Fiebre' a: 'Fernando'. 		self deny: ( algovid burbujaPinchada: 'Algoritmos 3' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test06UnaPersonaDeRiesgoNoPuedeCircular	algovid nuevaPersona: 'Pepe'.	algovid esPersonaDeRiesgo: 'Pepe'.		self deny: ( algovid puedeCircular: 'Pepe' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 02:13'!test37EnUnColegioVacioHayClasesPresenciales	algovid nuevoColegio: 'FIUBA'.		self assert: ( algovid clasesPresencialesEn: 'FIUBA' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:40'!test23TenerContactoConUnaPersonaInexistenteLanzaError	algovid nuevaPersona: 'Franco'.		self should: [ algovid contactoEstrechoEntre: 'Franco' y: 'Pepe' ] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:40'!test24ContactoEstrechoEntreDosPersonasInexistentesLanzaError	self should: [ algovid contactoEstrechoEntre: 'Franco' y: 'Pepe' ] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:25'!test18PedirDiagnosticoDeUnaPersonaInexistenteLanzaError	self should: [ algovid diagnosticoDe: 'Agustina' ] raise: PersonaNoEncontradaError.	! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test03UnaPersonaVacunadaConSintomasNoPuedeCircular	algovid nuevaPersona: 'Carlos'.	algovid estaVacunadx: 'Carlos'.	algovid agregarSintoma: 'Fiebre' a: 'Carlos'. 		self deny: ( algovid puedeCircular: 'Carlos' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:13'!test11DecirQueUnaPersonaInexistenteEstaVacunadaLanzaError	self should: [ algovid estaVacunadx: 'Pablo' ] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test14UnaPersonaSinSintomasTieneDiagnosticoNegativo	algovid nuevaPersona: 'Agustina'.		self assert: ( algovid diagnosticoDe: 'Agustina' ) equals: 'Negativo'  	! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 02:03'!test33SiMasDel40PorcientoDeLasBurbujasEstanPinchadasNoHayClasesPresenciales	algovid nuevaBurbuja: 'Algoritmos 1'.	algovid nuevaPersona: 'Manuel'.	algovid nuevaPersona: 'Carlos'.	algovid nuevaPersona: 'Nahuel'.	algovid agregarA: 'Manuel' aLaBurbuja: 'Algoritmos 1'.	algovid agregarA: 'Carlos' aLaBurbuja: 'Algoritmos 1'.	algovid agregarA: 'Nahuel' aLaBurbuja: 'Algoritmos 1'.		algovid nuevaBurbuja: 'Algoritmos 2'.	algovid nuevaPersona: 'Mariano'.	algovid nuevaPersona: 'Lucas'.	algovid agregarA: 'Mariano' aLaBurbuja: 'Algoritmos 2'.	algovid agregarA: 'Lucas' aLaBurbuja: 'Algoritmos 2'.		algovid nuevaPersona: 'Pablo'.	algovid nuevaPersona: 'Diego'.	algovid nuevaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Pablo' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Diego' aLaBurbuja: 'Algoritmos 3'. 		algovid nuevoColegio: 'FIUBA'.	algovid agregarA: 'Algoritmos 1' alColegio: 'FIUBA'.	algovid agregarA: 'Algoritmos 2' alColegio: 'FIUBA'.	algovid agregarA: 'Algoritmos 3' alColegio: 'FIUBA'.		algovid agregarSintoma: 'Gripe' a: 'Lucas'.	algovid agregarSintoma: 'Dolor corporal' a: 'Lucas'.	algovid agregarSintoma: 'Cansancio' a: 'Lucas'.		algovid agregarSintoma: 'Gripe' a: 'Diego'.	algovid agregarSintoma: 'Dolor corporal' a: 'Diego'.	algovid agregarSintoma: 'Cansancio' a: 'Diego'.		self deny: ( algovid clasesPresencialesEn: 'FIUBA').! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test04UnPersonalEsencialSinSintomasPuedeCircular	algovid nuevaPersona: 'Carlos'.	algovid esPersonalEsencial: 'Carlos'.		self assert: ( algovid puedeCircular: 'Carlos' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test02UnaPersonaVacunadaSinSintomasPuedeCircular	algovid nuevaPersona: 'Carlos'.	algovid estaVacunadx: 'Carlos'.		self assert: ( algovid puedeCircular: 'Carlos' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 02:07'!test35AgregarUnaBurbujaInexistenteAUnColegioLanzaError	algovid nuevoColegio: 'FIUBA'.		self should: [ algovid agregarA: 'Algoritmos 3' alColegio: 'FIUBA' ] raise: BurbujaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test13UnaPersonaConUnSintomaTieneDiagnosticoSospechoso	algovid nuevaPersona: 'Agustina'.	algovid agregarSintoma: 'Fiebre' a: 'Agustina'.		self assert: ( algovid diagnosticoDe: 'Agustina' ) equals: 'Sospechoso'  	! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:51'!test30AgregarUnaPersonaInexistenteAUnaBurbujaLanzaError	algovid nuevaBurbuja: 'Algoritmos 3'.		self should: [ algovid agregarA: 'Pepe' aLaBurbuja: 'Algoritmos 3' ] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:50'!test29AgregarUnaPersonaAUnaBurbujaInexistenteLanzaError	algovid nuevaPersona: 'Pepe'.		self should: [ algovid agregarA: 'Pepe' aLaBurbuja: 'Algoritmos 3' ] raise: BurbujaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test01UnaPersonaPorDefectoNoPuedeSalir	algovid nuevaPersona: 'Nahuel'.		self deny: (algovid puedeCircular: 'Nahuel').! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:42'!test25PorDefectoUnaBurbujaNoEstaPinchada	algovid nuevaBurbuja: 'Algoritmos 3'.		self deny: ( algovid burbujaPinchada: 'Algoritmos 3' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:34'!test19UnaPersonaConDiagnosticoSospechosoNoPuedeCircular	algovid nuevaPersona: 'Franco'.	algovid estaVacunadx: 'Franco'.	algovid agregarSintoma: 'Fiebre' a: 'Franco'.		self deny: ( algovid puedeCircular: 'Franco' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:39'!test21UnaPersonaConContactoEstrechoConUnSospechosoNoPuedeCircular	algovid nuevaPersona: 'Franco'.	algovid agregarSintoma: 'Fiebre' a: 'Franco'.		algovid nuevaPersona: 'Manuel'.	algovid contactoEstrechoEntre: 'Manuel' y: 'Franco'.		self deny: ( algovid puedeCircular: 'Manuel' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:10'!test09DecirQueUnPersonalInexistenteEsEsencialLanzaError	self should: [ algovid esPersonalEsencial: 'Pablo'] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:35'!test20UnaPersonaConDiagnosticoPositivoNoPuedeCircular	algovid nuevaPersona: 'Franco'.	algovid estaVacunadx: 'Franco'.	algovid agregarSintoma: 'Fiebre' a: 'Franco'.	algovid agregarSintoma: 'Dolor de garganta' a: 'Franco'.	algovid agregarSintoma: 'Diarrea' a: 'Franco'. 		self deny: ( algovid puedeCircular: 'Franco' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:43'!test26UnaBurbujaSinCasosPositivosNoEstaPinchada	algovid nuevaBurbuja: 'Algoritmos 3'.	algovid nuevaPersona: 'Franco'.	algovid nuevaPersona: 'Fernando'.	algovid nuevaPersona: 'Nahuel'.	algovid nuevaPersona: 'Melina'.	algovid agregarA: 'Franco' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Fernando' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Nahuel' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Melina' aLaBurbuja: 'Algoritmos 3'.		self deny: ( algovid burbujaPinchada: 'Algoritmos 3' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 02:06'!test34AgregarUnaBurbujaAUnColegioInexistenteLanzaError	algovid nuevaBurbuja: 'Algoritmos 3'.		self should: [ algovid agregarA: 'Algoritmos 3' alColegio: 'FIUBA' ] raise: ColegioNoEncontradoError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:26'!test05UnPersonalEsencialConSintomasNoPuedeCircular	algovid nuevaPersona: 'Carlos'.	algovid esPersonalEsencial: 'Carlos'.	algovid agregarSintoma: 'Fiebre' a: 'Carlos'. 		self deny: ( algovid puedeCircular: 'Carlos' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 02:10'!test36MirarSiHayClasesPresencialesEnUnColegioInexistenteLanzaError	self should: [ algovid clasesPresencialesEn: 'FIUBA' ] raise: ColegioNoEncontradoError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:46'!test28UnaBurbujaConAlgunPositivoEstaPinchada	algovid nuevaBurbuja: 'Algoritmos 3'.	algovid nuevaPersona: 'Franco'.	algovid nuevaPersona: 'Fernando'.	algovid nuevaPersona: 'Nahuel'.	algovid nuevaPersona: 'Melina'.	algovid agregarA: 'Franco' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Fernando' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Nahuel' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Melina' aLaBurbuja: 'Algoritmos 3'.	algovid agregarSintoma: 'Fiebre' a: 'Fernando'. 	algovid agregarSintoma: 'Dolor de garganta' a: 'Fernando'.	algovid agregarSintoma: 'Perdida del olfato' a: 'Fernando'.		self assert: ( algovid burbujaPinchada: 'Algoritmos 3' ).! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:12'!test10DecirQueUnaPersonaInexistenteEsDeRiesgoLanzaError	self should: [ algovid esPersonaDeRiesgo: 'Pablo' ] raise: PersonaNoEncontradaError.! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 02:01'!test32SiMenosDel40PorcientoDeLasBurbujasEstanPinchadasHayClasesPresenciales	algovid nuevaBurbuja: 'Algoritmos 1'.	algovid nuevaPersona: 'Manuel'.	algovid nuevaPersona: 'Carlos'.	algovid nuevaPersona: 'Nahuel'.	algovid agregarA: 'Manuel' aLaBurbuja: 'Algoritmos 1'.	algovid agregarA: 'Carlos' aLaBurbuja: 'Algoritmos 1'.	algovid agregarA: 'Nahuel' aLaBurbuja: 'Algoritmos 1'.		algovid nuevaBurbuja: 'Algoritmos 2'.	algovid nuevaPersona: 'Mariano'.	algovid nuevaPersona: 'Lucas'.	algovid agregarA: 'Mariano' aLaBurbuja: 'Algoritmos 2'.	algovid agregarA: 'Lucas' aLaBurbuja: 'Algoritmos 2'.		algovid nuevaPersona: 'Pablo'.	algovid nuevaPersona: 'Diego'.	algovid nuevaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Pablo' aLaBurbuja: 'Algoritmos 3'.	algovid agregarA: 'Diego' aLaBurbuja: 'Algoritmos 3'. 		algovid nuevoColegio: 'FIUBA'.	algovid agregarA: 'Algoritmos 1' alColegio: 'FIUBA'.	algovid agregarA: 'Algoritmos 2' alColegio: 'FIUBA'.	algovid agregarA: 'Algoritmos 3' alColegio: 'FIUBA'.		algovid agregarSintoma: 'Gripe' a: 'Lucas'.	algovid agregarSintoma: 'Dolor corporal' a: 'Lucas'.	algovid agregarSintoma: 'Cansancio' a: 'Lucas'.		self assert: ( algovid clasesPresencialesEn: 'FIUBA').! !!AlgoVidTests methodsFor: 'tests' stamp: 'Nahuel 5/15/2021 01:39'!test22UnaPersonaConContactoEstrechoConUnPositivoNoPuedeCircular	algovid nuevaPersona: 'Franco'.	algovid agregarSintoma: 'Fiebre' a: 'Franco'.	algovid agregarSintoma: 'Dolor de garganta' a: 'Franco'.	algovid agregarSintoma: 'Diarrea' a: 'Franco'.		algovid nuevaPersona: 'Manuel'.	algovid contactoEstrechoEntre: 'Manuel' y: 'Franco'.		self deny: ( algovid puedeCircular: 'Manuel' ).! !Object subclass: #AlgoVid	instanceVariableNames: 'personas burbujas colegios'	classVariableNames: ''	package: 'TP1'!!AlgoVid methodsFor: 'initialization' stamp: 'Nahuel 5/14/2021 20:49'!initialize 	personas := OrderedCollection new.	burbujas := OrderedCollection new.	colegios := OrderedCollection new.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 02:05'!agregarA: unaBurbuja alColegio: unColegio	| burbuja colegio |	burbuja := self buscarBurbuja: unaBurbuja.	colegio := self buscarColegio: unColegio.	^ colegio agregarA: burbuja.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:10'!esPersonalEsencial: unaPersona	| persona |	persona := self buscarPersona: unaPersona.	persona esPersonalEsencial.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 02:06'!buscarColegio: unColegio	^ colegios detect: [ :e | e nombre = unColegio  ]				ifNone: [ ColegioNoEncontradoError signal ].! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:08'!agregarSintoma: unSintoma a: unaPersona	| persona |	persona := self buscarPersona: unaPersona.	persona agregarSintoma: unSintoma.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 20:50'!nuevoColegio: unColegio	colegios add: ( Colegio new definirNombre: unColegio ).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:11'!puedeCircular: unaPersona	| persona |	persona := self buscarPersona: unaPersona.	^ persona puedeCircular.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:10'!diagnosticoDe: unaPersona	| persona |	persona := self buscarPersona: unaPersona.	^ persona diagnostico.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 02:14'!clasesPresencialesEn: unColegio	| colegio |	colegio := self buscarColegio: unColegio.	^ [ colegio hayClasesPresenciales ] on: ZeroDivide do: [ true ]. ! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:10'!estaVacunadx: unaPersona	| persona |	persona := self buscarPersona: unaPersona.	^ persona estaVacunadx.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:04'!buscarPersona: unaPersona	^ personas detect: [ :e | e nombre = unaPersona  ]				ifNone: [ PersonaNoEncontradaError signal ].! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:48'!burbujaPinchada: unaBurbuja	| burbuja|	burbuja := self buscarBurbuja: unaBurbuja.	^ burbuja estaPinchada.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 18:27'!nuevaPersona: unaPersona 	| persona |	persona := Persona new asignarNombre: unaPersona.	personas add: persona.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:59'!nuevaBurbuja: nombreBurbuja	burbujas add: ( Burbuja new asignarNombre: nombreBurbuja).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:47'!agregarA: unaPersona aLaBurbuja: unaBurbuja	| burbuja persona |	burbuja := self buscarBurbuja: unaBurbuja.	persona := self buscarPersona: unaPersona.	^ burbuja agregarA: persona.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:20'!contactoEstrechoEntre: unaPersona y: otraPersona	| persona1 persona2 |	persona1 := self buscarPersona: unaPersona.	persona2 := self buscarPersona: otraPersona.	persona1 tenerContactoEstrecho: persona2.		persona2 tenerContactoEstrecho: persona1.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:10'!esPersonaDeRiesgo: unaPersona	| persona |	persona := self buscarPersona: unaPersona.	persona esPersonaDeRiesgo.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:47'!buscarBurbuja: unaBurbuja	^ burbujas detect: [ :e | e nombre = unaBurbuja ]				ifNone: [ BurbujaNoEncontradaError signal ].! !Object subclass: #Burbuja	instanceVariableNames: 'nombre personas'	classVariableNames: ''	package: 'TP1'!!Burbuja methodsFor: 'initialization' stamp: 'Nahuel 5/14/2021 20:00'!initialize	personas := OrderedCollection new.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 01:27'!estaPinchada	| positivo |	positivo := personas detect: [ :e | e diagnostico = 'Positivo' ] ifNone: [ ^ false ].	personas do: [ :e | e tenerContactoEstrecho: positivo ]. 	^ true.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 20:04'!agregarA: unaPersona	personas add: unaPersona.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:59'!asignarNombre: unNombre 	nombre := unNombre.! !!Burbuja methodsFor: 'accessing' stamp: 'Nahuel 5/14/2021 20:03'!nombre	^ nombre.! !Error subclass: #BurbujaNoEncontradaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Colegio	instanceVariableNames: 'nombre burbujas'	classVariableNames: ''	package: 'TP1'!!Colegio methodsFor: 'initialization' stamp: 'Nahuel 5/14/2021 20:54'!initialize	burbujas := OrderedCollection new.! !!Colegio methodsFor: 'accessing' stamp: 'Nahuel 5/14/2021 20:53'!nombre	^ nombre.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 20:53'!agregarA: unaBurbuja 	burbujas add: unaBurbuja.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:34'!hayClasesPresenciales	| burbujasPinchadas |	burbujasPinchadas := burbujas count: [ :e | e estaPinchada ].	^ ((burbujasPinchadas / (burbujas size)) < 0.4)! !!Colegio methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 20:50'!definirNombre: unNombre	nombre := unNombre.! !Error subclass: #ColegioNoEncontradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #CondicionMedica	instanceVariableNames: 'sintomas edad contactoEstrecho diagnosticoCOVID'	classVariableNames: ''	package: 'TP1'!!CondicionMedica methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:53'!diagnostico	^ diagnosticoCOVID diagnostico.! !!CondicionMedica methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 02:38'!agregarSintoma: unSintoma	sintomas add: ( Sintoma nuevoSintoma: unSintoma ).	self actualizarCondicion! !!CondicionMedica methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:52'!puedeCircular	^ ((edad puedeCircular) & (diagnosticoCOVID puedeCircular) & (contactoEstrecho puedeCircular)).! !!CondicionMedica methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:52'!actualizarCondicion	diagnosticoCOVID := Diagnostico determinarDiagnostico: sintomas.! !!CondicionMedica methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:29'!tenerContactoEstrecho: unaPersona	contactoEstrecho := contactoEstrecho tenerContactoEstrecho: unaPersona.! !!CondicionMedica methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:28'!esPersonaDeRiesgo	edad := DeRiesgo new.! !!CondicionMedica methodsFor: 'initialization' stamp: 'Nahuel 5/14/2021 23:52'!initialize	sintomas := OrderedCollection new.	edad := NoDeRiesgo new.	contactoEstrecho := NoContactoEstrecho new.	diagnosticoCOVID := Negativo new.! !Object subclass: #ContactoEstrecho	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!ContactoEstrecho methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:19'!tenerContactoEstrecho: unaPersona	^ self.! !!ContactoEstrecho methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:17'!puedeCircular	^ false.! !Object subclass: #DeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!DeRiesgo methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:55'!puedeCircular	^ false.! !Object subclass: #Diagnostico	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Diagnostico methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:40'!puedeCircular	self subclassResponsibility.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:38'!diagnostico	self subclassResponsibility.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Diagnostico class	instanceVariableNames: ''!!Diagnostico class methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 22:50'!determinarDiagnostico: sintomas	sintomas ifNotEmpty: [ 		((( sintomas anySatisfy: [:e | e esHabitual ]) & (sintomas size = 3)) | (sintomas size >= 4)) ifTrue: [ 			^ Positivo new.			] ifFalse: [ 			^ Sospechoso new.			]	].! !Diagnostico subclass: #Negativo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Negativo methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:41'!puedeCircular	^ true.! !!Negativo methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:40'!diagnostico	^ 'Negativo'.! !Object subclass: #NoContactoEstrecho	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoContactoEstrecho methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:22'!tenerContactoEstrecho: unaPersona	(unaPersona diagnostico = 'Negativo') ifTrue: [ ^ NoContactoEstrecho new ] ifFalse: [ ^ ContactoEstrecho new ].! !!NoContactoEstrecho methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:17'!puedeCircular	^ true.! !Object subclass: #NoDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoDeRiesgo methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 22:46'!puedeCircular	^ true.! !Object subclass: #Persona	instanceVariableNames: 'nombre condicionMedica vacunacion trabajo'	classVariableNames: ''	package: 'TP1'!!Persona methodsFor: 'initialization' stamp: 'Nahuel 5/14/2021 23:50'!initialize	condicionMedica := CondicionMedica new.	vacunacion := NoVacunado new.	trabajo := NoEsencial new.! !!Persona methodsFor: 'accessing' stamp: 'Nahuel 5/14/2021 18:05'!nombre	^ nombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:51'!estaVacunadx	vacunacion := Vacunado new.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 22:54'!diagnostico	^ condicionMedica diagnostico.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:30'!agregarSintoma: unSintoma	condicionMedica agregarSintoma: unSintoma.	! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:52'!puedeCircular	^ (((vacunacion puedeCircular) | (trabajo puedeCircular)) & (condicionMedica puedeCircular)).! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 22:57'!esPersonalEsencial	trabajo := Esencial new.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 17:50'!asignarNombre: unNombre	nombre := unNombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:32'!tenerContactoEstrecho: unaPersona	condicionMedica tenerContactoEstrecho: unaPersona.! !!Persona methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 23:30'!esPersonaDeRiesgo	condicionMedica esPersonaDeRiesgo.! !Error subclass: #PersonaNoEncontradaError	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Diagnostico subclass: #Positivo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Positivo methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:41'!puedeCircular	^ false.! !!Positivo methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:41'!diagnostico	^ 'Positivo'! !Object subclass: #Sintoma	instanceVariableNames: 'descripcion'	classVariableNames: ''	package: 'TP1'!!Sintoma methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 18:46'!asignarDescripcion: unSintoma	descripcion := unSintoma.! !!Sintoma methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 18:47'!esHabitual	self subclassResponsibility.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sintoma class	instanceVariableNames: ''!!Sintoma class methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/15/2021 02:40'!nuevoSintoma: unSintoma	( #( 'Fiebre' 'Tos' 'Cansancio' ) includes: unSintoma ) ifTrue: [ 		^ SintomaHabitual new asignarDescripcion: unSintoma.	] ifFalse: [ 		^ SintomaNoHabitual new asignarDescripcion: unSintoma.	].! !Sintoma subclass: #SintomaHabitual	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SintomaHabitual methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 18:47'!esHabitual	^ true.! !Sintoma subclass: #SintomaNoHabitual	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SintomaNoHabitual methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 18:47'!esHabitual	^ false.! !Diagnostico subclass: #Sospechoso	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Sospechoso methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 21:41'!diagnostico	^ 'Sospechoso'! !!Sospechoso methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 22:42'!puedeCircular	^ false.! !Object subclass: #Trabajo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Trabajo subclass: #Esencial	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Esencial methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:37'!puedeCircular	^ true.! !Trabajo subclass: #NoEsencial	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoEsencial methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 22:46'!puedeCircular	^ false.! !Object subclass: #Vacunacion	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Vacunacion subclass: #NoVacunado	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!NoVacunado methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:40'!tenerContactoEstrecho	^ nil.! !!NoVacunado methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:57'!esDeRiesgo	^ false.! !!NoVacunado methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 18:25'!puedeCircular	^ false.! !Vacunacion subclass: #Vacunado	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Vacunado methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:41'!tenerContactoEstrecho	^ nil.! !!Vacunado methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 19:57'!esDeRiesgo	^ false.! !!Vacunado methodsFor: 'as yet unclassified' stamp: 'Nahuel 5/14/2021 18:25'!puedeCircular	^ true.! !